AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    sam-app

    Sample SAM Template for sam-app
    
Metadata:
    AWS::ServerlessRepo::Application:
        Name: python-gqt
        Description: python gqt application
        Author: Ryan Layer
        SpdxLicenseId: Apache-2.0
        #LicenseUrl: lib/gqt/LICENSE
        #ReadmeUrl: lib/gqt/README.md
        HomePageUrl: https://github.com/gqt
        SemanticVersion: 0.0.1
        SourceCodeUrl: https://github.com/gqt
        #ApplicationId: arn:aws:serverlessrepo:us-east-1:560348900601:applications/lambda-authorizer-basic-auth
        
Globals:
    Function:
        Timeout: 3

Resources:
    GQT:
        Type: AWS::Serverless::Function 
        Properties:
            Handler: lambda_function.handler
            Runtime: python2.7
            
            
            
            
            
#             Location: 
#                 ApplicationId: arn:aws:cloudformation:us-east-1:783027271111:stack/python-gqt/c72b67f0-ad8f-11e9-a38b-12c395c1242e
#             Role:
#                 Fn::ImportValue:
#                     !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::us-east-1', 'LambdaTrustRole']]
#             CodeUri: s3://layer-overflow-bucket/a0f90b27282467412387c2857cee7960

#         Auth:
#             Authorizer: 
#                 Type: "AWS::ApiGateway::Authorizer"
#                 Properties: 
#                     AuthorizerCredentials: 
#                         Fn::GetAtt: 
#                             - "LambdaInvocationRole"
#                             - "Arn"
#                         AuthorizerResultTtlInSeconds: "300"
#                         AuthorizerUri: "arn:aws:cloudformation:us-east-1:783027271111:stack/python-gqt/c72b67f0-ad8f-11e9-a38b-12c395c1242e"
#                         Type: "TOKEN"
#                         IdentitySource: "method.request.header.Authorization" 
#                         Name: "DefaultAuthorizer"
#                         RestApiId: 
#                             Ref: "RestApi"


# MyLambdaRequestAuthorizer:
#     FunctionPayloadType: "REQUEST"
#     FunctionArn: "!GetAtt lambdaauthorizerbasicauth.Outputs.LambdaAuthorizerBasicAuthFunction"
#     Identity:
#         Headers:
#             "- Authorization"
            
            
            # Environment: 
            #     Variables:
            #         PARAM1: VALUE
            # Events:
            #     HelloWorld:
            #         Type: Api 
            #         Properties:
            #             Path: /
            #             Method: get
            


